-- todo: индексы добавить


create table region
(
    id         int2 generated by default as identity not null,
    name       varchar(16)                           not null,
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,

    constraint pk__region__id primary key (id)
);


create table city
(
    id         int2 generated by default as identity not null,
    name       varchar(32)                           not null,
    region_id  int2                                  not null,
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,

    constraint pk__city__id primary key (id),
    constraint fk__city__region foreign key (region_id) references region (id)
);


create table organization
(
    id         int2 generated by default as identity not null,
    name       varchar(64)                           not null,
    city_id    int2                                  not null,
    note       varchar(256),
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,

    constraint pk__organization__id primary key (id),
    constraint fk__organization__city foreign key (city_id) references city (id)
);


create table groups
(
    id              int4 generated by default as identity not null,
    name            varchar(32)                           not null,
    mapping         varchar(32),
    group_type      varchar(32)                           not null,
    organization_id int2                                  not null,
    city_id         int2,
    note            varchar(256),
    created_at      timestamp with time zone              not null,
    updated_at      timestamp with time zone              not null,

    constraint pk__groups__id primary key (id),
    constraint fk__groups__organization foreign key (organization_id) references organization (id),
    constraint fk__groups__city foreign key (city_id) references city (id)
);


create table users
(
    id                            int4 generated by default as identity not null,
    first_name                    varchar(64)                           not null,
    middle_name                   varchar(64),
    last_name                     varchar(64)                           not null,
    phone_number                  varchar(16),
    security_code                 varchar(128),
    security_code_expiration_date timestamp with time zone,
    user_type                     varchar(32)                           not null,
    balance                       float8                                not null,
    version                       int4                                  not null,
    access_admin                  boolean                               not null,
    mobile_access                 boolean                               not null,
    note                          varchar(256),
    active                        boolean                               not null default true,
    created_at                    timestamp with time zone              not null,
    updated_at                    timestamp with time zone              not null,

    constraint pk__users__id primary key (id)
);


create table groups_users
(
    user_id  int4 not null,
    group_id int4 not null,

    constraint fk__groups_users__users foreign key (user_id) references users (id),
    constraint fk__groups_users__groups foreign key (group_id) references groups (id)
);


create table user_link
(
    id           int4 generated by default as identity not null,
    user_id      int4                                  not null,
    owner_id     int4                                  not null,
    receive_push boolean                               not null,
    receive_sms  boolean                               not null,
    created_at   timestamp with time zone              not null,
    updated_at   timestamp with time zone              not null,

    constraint pk__user_link__id primary key (id),
    constraint fk__user_link__users foreign key (user_id) references users (id),
    constraint fk__user_link__owners foreign key (owner_id) references users (id)
);


create table push_token
(
    id         int4 generated by default as identity not null,
    user_id    int4                                  not null,
    token      varchar(512)                          not null,
    platform   varchar(32)                           not null,
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,

    constraint pk__push_token__id primary key (id),
    constraint fk__push_token__users foreign key (user_id) references users (id)
);


create table service
(
    id          int2 generated by default as identity not null,
    name        varchar(64)                           not null,
    disposable  boolean                               not null,
    sms_notify  boolean                               not null,
    push_notify boolean                               not null,
    active      boolean                               not null default true,
    created_at  timestamp with time zone              not null,
    updated_at  timestamp with time zone              not null,

    constraint pk__service__id primary key (id)
);


create table service_to_user
(
    id             int4 generated by default as identity not null,
    user_id        int4                                  not null,
    owner_id       int4                                  not null,
    service_id     int2                                  not null,
    active_from    date                                  not null,
    mobile_request boolean                               not null default false,
    created_at     timestamp with time zone              not null,
    updated_at     timestamp with time zone              not null,

    constraint pk__service_to_user__id primary key (id),
    constraint fk__service_to_user__users foreign key (user_id) references users (id),
    constraint fk__service_to_user__owners foreign key (owner_id) references users (id),
    constraint fk__service_to_user__service foreign key (service_id) references service (id)
);


create table controller
(
    id              int2 generated by default as identity not null,
    url             varchar(32)                           not null,
    port            int2                                  not null,
    pass_code_size  int2                                  not null default 8,
    organization_id int2                                  not null,
    active          boolean                               not null,
    note            varchar(256),
    created_at      timestamp with time zone              not null,
    updated_at      timestamp with time zone              not null,

    constraint pk__controller__id primary key (id),
    constraint fk__controller__organization foreign key (organization_id) references organization (id)
);


create table device
(
    id            int2 generated by default as identity not null,
    address       int2                                  not null,
    controller_id int2                                  not null,
    left_is_entry boolean                               not null,
    note          varchar(256),
    created_at    timestamp with time zone              not null,
    updated_at    timestamp with time zone              not null,

    constraint pk__device__id primary key (id),
    constraint fk__device__controller foreign key (controller_id) references controller (id)
);


create table event
(
    id              int8 generated by default as identity not null,
    event_type      int2                                  not null,
    direction       int2                                  not null,
    fired_at        timestamp with time zone              not null,
    user_id         int4                                  not null,
    organization_id int2                                  not null,
    controller_id   int2                                  not null,
    device_address  int2                                  not null,
    created_at      timestamp with time zone              not null,

    constraint pk__event__id primary key (id),
    constraint fk__event__users foreign key (user_id) references users (id),
    constraint fk__event__organization foreign key (organization_id) references organization (id),
    constraint fk__event__controller foreign key (controller_id) references controller (id)
);


create table pass_order
(
    id             int4 generated by default as identity not null,
    user_id        int4                                  not null,
    group_id       int4                                  not null,
    owner_id       int4                                  not null,
    pass_code      varchar(32),
    reason         varchar(32)                           not null,
    status         varchar(32)                           not null,
    mobile_request boolean                               not null default false,
    note           varchar(256),
    created_at     timestamp with time zone              not null,
    updated_at     timestamp with time zone              not null,

    constraint pk__pass_order__id primary key (id),
    constraint fk__pass_order__users foreign key (user_id) references users (id),
    constraint fk__pass_order__owners foreign key (owner_id) references users (id),
    constraint fk__pass_order__groups foreign key (group_id) references groups (id)
);


create table employee
(
    id                            int2 generated by default as identity not null,
    first_name                    varchar(64)                           not null,
    last_name                     varchar(64)                           not null,
    phone_number                  varchar(16)                           not null,
    security_code                 varchar(128),
    security_code_expiration_date timestamp with time zone,
    role                          varchar(32)                           not null,
    created_at                    timestamp with time zone              not null,
    updated_at                    timestamp with time zone              not null,

    constraint pk__employee__id primary key (id)
);


------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------     INSERTS    ---------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------


insert into employee (first_name, last_name, phone_number, role, created_at, updated_at)
values ('Сергей', 'Лемеш', '375293242289', 'ADMIN', '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Иван', 'Иванов', '375333014285', 'USER', '2025-04-05 10:00:00.097000 +00:00',  '2025-04-05 10:00:00.097000 +00:00');

insert into region (name, created_at, updated_at)
values ('Минская', '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');


insert into city (name, region_id, created_at, updated_at)
values ('Слуцк', 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');


insert into organization (name, city_id, created_at, updated_at)
values ('Гимгазия № 1', 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('СШ № 10', 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');


insert into groups (name, mapping, group_type, organization_id, city_id, created_at, updated_at)
values ('2023-А', '2А', 'CLASSES', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('2019-В', '6В', 'CLASSES', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('2022-Б', '3Б', 'CLASSES', 2, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Родители', null, 'PARENTS', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Родители', null, 'PARENTS', 2, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Сотрудники', null, 'TEACHERS', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Сотрудники', null, 'TEACHERS', 2, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');


insert into users (first_name, middle_name, last_name, phone_number, user_type, balance, version, access_admin,
                   mobile_access,
                   created_at, updated_at)
values ('Иван', 'Иванович', 'Иванов', '375293333333', 'PARENT', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Дарья', null, 'Иванова', null, 'PUPIL', 0.00, 0, false, false,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Максим', null, 'Иванов', null, 'PUPIL', 0.00, 0, false, false,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),


       ('Петр', 'Петрович', 'Петров', '375297777777', 'PARENT', 1.10, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Валерия', null, 'Петрова', null, 'PUPIL', 0.00, 0, false, false,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),

       ('Елена', 'Ивановна', 'Волкова', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Наталья', 'Петровна', 'Курбацкая', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Никита', 'Павлович', 'Кузура', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Александр', 'Николаевич', 'Буралкин', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Мария', 'Сергеевна', 'Котович', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Марина', 'Ивановна', 'Руденя', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Елена', 'Викторовна', 'Бондарь', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Нина', 'Ильинична', 'Ефанкова', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('Наталья', 'Викторовна', 'Стрикова', '375221234567', 'TEACHER', 0.00, 0, true, true,
        '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');



insert into groups_users (user_id, group_id)
values (2, 1),
       (3, 2),
       (5, 3),
       (1, 4),
       (4, 5),
       (6, 6),
       (7, 6),
       (8, 6),
       (9, 6),
       (10, 6),
       (11, 7),
       (12, 7),
       (13, 7),
       (14, 7);


insert into service (name, disposable, sms_notify, push_notify, created_at, updated_at)
values ('Без уведомлений', false, false, false, '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00'),
       ('СМС уведомления', false, true, false, '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00'),
       ('PUSH уведомления', false, false, true, '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00'),
       ('Пропуск', true, false, false, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');


insert into service_to_user (user_id, owner_id, service_id, active_from, created_at, updated_at)
values (2, 1, 1, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00'),
       (3, 1, 2, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00'),
       (5, 4, 3, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00');



insert into controller (url, port, organization_id, active, created_at, updated_at)
values ('178.142.240.12', 9761, 1, true, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       ('178.142.242.36', 9761, 2, true, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');


insert into device (address, controller_id, left_is_entry, created_at, updated_at)
values (1, 1, true, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       (2, 1, false, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       (1, 2, false, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00'),
       (2, 2, true, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00');


insert into event (event_type, direction, fired_at, user_id, organization_id, controller_id, device_address, created_at)
values (0, 1, '2025-04-01 07:51:03.000000 +03:00', 2, 1, 1, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-01 14:44:03.000000 +03:00', 2, 1, 1, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-02 07:54:03.000000 +03:00', 2, 1, 1, 2, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 1, '2025-04-02 14:49:03.000000 +03:00', 2, 1, 1, 2, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-03 07:44:03.000000 +03:00', 2, 1, 1, 2, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-03 15:05:03.000000 +03:00', 2, 1, 1, 1, '2025-04-05 10:00:00.097000 +00:00'),

       (0, 1, '2025-04-01 12:50:03.000000 +03:00', 3, 1, 1, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 1, '2025-04-01 17:41:03.000000 +03:00', 3, 1, 1, 2, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-02 12:57:03.000000 +03:00', 3, 1, 1, 2, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 1, '2025-04-02 17:43:03.000000 +03:00', 3, 1, 1, 2, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 1, '2025-04-03 12:48:03.000000 +03:00', 3, 1, 1, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-03 18:09:03.000000 +03:00', 3, 1, 1, 1, '2025-04-05 10:00:00.097000 +00:00'),

       (0, 1, '2025-04-01 07:38:03.000000 +03:00', 5, 2, 2, 2, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 1, '2025-04-01 15:22:03.000000 +03:00', 5, 2, 2, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-02 07:40:03.000000 +03:00', 5, 2, 2, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 1, '2025-04-02 15:34:03.000000 +03:00', 5, 2, 2, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-03 07:43:03.000000 +03:00', 5, 2, 2, 1, '2025-04-05 10:00:00.097000 +00:00'),
       (0, 2, '2025-04-03 15:11:03.000000 +03:00', 5, 2, 2, 2, '2025-04-05 10:00:00.097000 +00:00');