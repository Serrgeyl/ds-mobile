-- todo: индексы добавить


create table region
(
    id         int2 generated by default as identity not null,
    name       varchar(16)                           not null,
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,
    created_by varchar(64)                           not null,
    updated_by varchar(64)                           not null,

    constraint pk__region__id primary key (id)
);


create table city
(
    id         int2 generated by default as identity not null,
    name       varchar(32)                           not null,
    region_id  int2                                  not null,
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,
    created_by varchar(64)                           not null,
    updated_by varchar(64)                           not null,

    constraint pk__city__id primary key (id),
    constraint fk__city__region foreign key (region_id) references region (id)
);


create table organization
(
    id         int2 generated by default as identity not null,
    name       varchar(64)                           not null,
    city_id    int2                                  not null,
    note       varchar(256),
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,
    created_by varchar(64)                           not null,
    updated_by varchar(64)                           not null,

    constraint pk__organization__id primary key (id),
    constraint fk__organization__city foreign key (city_id) references city (id)
);


create table users
(
    id                            int4 generated by default as identity not null,
    last_name                     varchar(64)                           not null,
    first_name                    varchar(64)                           not null,
    middle_name                   varchar(64),
    phone_number                  varchar(16),
    security_code                 varchar(128),
    security_code_expiration_date timestamp with time zone,
    user_type                     varchar(32)                           not null,
    balance                       float8                                not null default 0.0,
    version                       int4                                  not null default 0,
    note                          varchar(256),
    created_at                    timestamp with time zone              not null,
    updated_at                    timestamp with time zone              not null,
    created_by                    varchar(64)                           not null,
    updated_by                    varchar(64)                           not null,

    constraint pk__users__id primary key (id)
);


create table groups
(
    id               int4 generated by default as identity not null,
    name             varchar(32)                           not null,
    group_type       varchar(32)                           not null,
    organization_id  int2                                  not null,
    city_id          int2                                  not null,
    mapping          varchar(32),
    class_teacher_id int4,
    note             varchar(256),
    created_at       timestamp with time zone              not null,
    updated_at       timestamp with time zone              not null,
    created_by       varchar(64)                           not null,
    updated_by       varchar(64)                           not null,

    constraint pk__groups__id primary key (id),
    constraint fk__groups__organization foreign key (organization_id) references organization (id),
    constraint fk__groups__city foreign key (city_id) references city (id),
    constraint fk__groups__users foreign key (class_teacher_id) references users (id)
);


create table groups_users
(
    user_id  int4 not null,
    group_id int4 not null,

    constraint fk__groups_users__users foreign key (user_id) references users (id),
    constraint fk__groups_users__groups foreign key (group_id) references groups (id)
);


create table push_token
(
    id         int4 generated by default as identity not null,
    user_id    int4                                  not null,
    token      varchar(512)                          not null,
    platform   varchar(32)                           not null,
    created_at timestamp with time zone              not null,
    updated_at timestamp with time zone              not null,

    constraint pk__push_token__id primary key (id),
    constraint fk__push_token__users foreign key (user_id) references users (id)
);


create table service
(
    id          int2 generated by default as identity not null,
    name        varchar(64)                           not null,
    price       int8                                  not null,
    disposable  boolean                               not null,
    sms_notify  boolean                               not null,
    push_notify boolean                               not null,
    active      boolean                               not null default true,
    created_at  timestamp with time zone              not null,
    updated_at  timestamp with time zone              not null,
    created_by  varchar(64)                           not null,
    updated_by  varchar(64)                           not null,

    constraint pk__service__id primary key (id)
);


create table service_to_user
(
    id             int4 generated by default as identity not null,
    user_id        int4                                  not null,
    owner_id       int4                                  not null,
    service_id     int2                                  not null,
    active_from    date                                  not null,
    mobile_request boolean                               not null default false,
    created_at     timestamp with time zone              not null,
    updated_at     timestamp with time zone              not null,
    created_by     varchar(64)                           not null,
    updated_by     varchar(64)                           not null,

    constraint pk__service_to_user__id primary key (id),
    constraint fk__service_to_user__users foreign key (user_id) references users (id),
    constraint fk__service_to_user__owners foreign key (owner_id) references users (id),
    constraint fk__service_to_user__service foreign key (service_id) references service (id)
);


create table pass_type
(
    id   int2        not null,
    name varchar(64) not null,

    constraint pk__pass_type__id primary key (id),
    constraint uq__pass_type__name unique (name)
);

insert into pass_type (id, name)
values (1, 'em-marine'),
       (2, 'mifare');


create table pass
(
    id              int4 generated by default as identity not null,
    pass_type_id    int2                                  not null,
    code            int8                                  not null,
    user_id         int4                                  not null,
    organization_id int2                                  not null,
    active_from     date                                  not null,
    active          boolean                               not null,
    synced          boolean                               not null default false,
    created_at      timestamp with time zone              not null,
    updated_at      timestamp with time zone              not null,
    created_by      varchar(64)                           not null,
    updated_by      varchar(64)                           not null,

    constraint pk__pass__id primary key (id),
    constraint fk__pass__pass_type foreign key (pass_type_id) references pass_type (id),
    constraint fk__pass__users foreign key (user_id) references users (id),
    constraint fk__pass__organization foreign key (organization_id) references organization (id)
);

create index idx__pass__code on pass (code);


create table pass_order_type
(
    id   int2        not null,
    name varchar(64) not null,

    constraint pk__pass_order_type__id primary key (id),
    constraint uq__pass_order_type__name unique (name)
);

insert into pass_order_type (id, name)
values (1, 'Новый'),
       (2, 'По акции'),
       (3, 'Повторно');


create table pass_order_status_type
(
    id   int2        not null,
    name varchar(64) not null,

    constraint pk__pass_order_status_type__id primary key (id),
    constraint uq__pass_order_status_type__name unique (name)
);

insert into pass_order_status_type (id, name)
values (1, 'Новый'),
       (2, 'Оплачен'),
       (3, 'Выполнен');


create table pass_order
(
    id                        int4 generated by default as identity not null,
    pass_order_type_id        int2                                  not null,
    pass_order_status_type_id int2                                  not null,
    user_id                   int4                                  not null,
    organization_id           int2                                  not null,
    owner_id                  int4                                  not null,
    pass_type_id              int2,
    pass_code                 varchar(32),
    mobile_request            boolean                               not null default false,
    note                      varchar(256),
    created_at                timestamp with time zone              not null,
    updated_at                timestamp with time zone              not null,
    created_by                varchar(64),
    updated_by                varchar(64),

    constraint pk__pass_order__id primary key (id),
    constraint fk__pass_order__pass_order_type foreign key (pass_order_type_id) references pass_order_type (id),
    constraint fk__pass_order__pass_order_status_type foreign key (pass_order_status_type_id) references pass_order_status_type (id),
    constraint fk__pass_order__user foreign key (user_id) references users (id),
    constraint fk__pass_order__organization foreign key (organization_id) references organization (id),
    constraint fk__pass_order__owner foreign key (owner_id) references users (id),
    constraint fk__pass_order__pass_type foreign key (pass_type_id) references pass_type (id)
);


create table employee
(
    id                            int2 generated by default as identity not null,
    first_name                    varchar(64)                           not null,
    last_name                     varchar(64)                           not null,
    phone_number                  varchar(16)                           not null,
    security_code                 varchar(128),
    security_code_expiration_date timestamp with time zone,
    role                          varchar(32)                           not null,
    created_at                    timestamp with time zone              not null,
    updated_at                    timestamp with time zone              not null,
    created_by                    varchar(64)                           not null,
    updated_by                    varchar(64)                           not null,

    constraint pk__employee__id primary key (id)
);


create table balance_operation
(
    id                     int8 generated by default as identity not null,
    balance_operation_type varchar(32)                           not null,
    user_id                int4                                  not null,
    amount                 int8                                  not null,
    payment_info           jsonb,
    charge_info            jsonb,
    created_at             timestamp with time zone              not null,
    updated_at             timestamp with time zone              not null,

    constraint pk__balance_operation__id primary key (id),
    constraint fk__balance_operation__users foreign key (user_id) references users (id)
);

create index balance_operation_payment_info_idx on balance_operation using btree ((payment_info -> 'paymentType'), (payment_info -> 'paymentId'));


create table user_balance
(
    user_id                   int4                                  not null,
    balance                   int8                                  not null default 0,
    version                   int4                                  not null default 0,
    last_balance_operation_id int8                                  not null,
    created_at                timestamp with time zone              not null,
    updated_at                timestamp with time zone              not null,

    constraint pk__user_balance__users_id primary key (user_id),
    constraint fk__user_balance__users foreign key (user_id) references users (id),
    constraint fk__user_balance__balance_operation foreign key (last_balance_operation_id) references balance_operation (id)
);


create table notification
(
    id                       int8 generated by default as identity not null,
    notification_type        varchar(32)                           not null,
    notification_event_type  varchar(32)                           not null,
    notification_status_type varchar(32)                           not null,
    user_id                  int4                                  not null,
    message                  varchar(256)                          not null,
    created_at               timestamp with time zone              not null,
    updated_at               timestamp with time zone              not null,

    constraint pk__notification__id primary key (id),
    constraint fk__notification__users foreign key (user_id) references users (id)
);


create table task
(
    id               int8 generated by default as identity not null,
    task_type        varchar(32)                           not null,
    task_status_type varchar(32)                           not null,
    attributes       jsonb                                 not null,
    start_at         timestamp without time zone           not null default now(),
    created_at       timestamp with time zone              not null,
    updated_at       timestamp with time zone              not null,
    created_by       varchar(64)                           not null,

    constraint pk__task__id primary key (id)
);


create table controller
(
    id                 int2 generated by default as identity not null,
    controller_type    varchar(32)                           not null,
    organization_id    int2                                  not null,
    attributes         jsonb                                 not null,
    active             boolean                               not null default false,
    created_at         timestamp with time zone              not null,
    updated_at         timestamp with time zone              not null,
    created_by         varchar(64)                           not null,
    updated_by         varchar(64)                           not null,

    constraint pk__controller__id primary key (id),
    constraint fk__controller__organization foreign key (organization_id) references organization (id)
);


create table controller_task
(
    id               int8 generated by default as identity not null,
    task_type        varchar(32)                           not null,
    task_status_type varchar(32)                           not null,
    controller_id    int2                                  not null,
    start_at         timestamp without time zone           not null default now(),
    created_at       timestamp with time zone              not null,
    updated_at       timestamp with time zone              not null,
    created_by       varchar(64)                           not null,

    constraint pk__controller_task__id primary key (id),
    constraint fk__controller_task__controller foreign key (controller_id) references controller (id)
);


create table event_type
(
    id   int2        not null,
    code int2        not null,
    name varchar(32) not null,

    constraint pk__event_type__id primary key (id)
);

insert into event_type (id, code, name)
values (1, 0, 'Проход по пропуску'),
       (2, 255, 'Неизвестное событие');


create table event_entry_type
(
    id   int2        not null,
    name varchar(32) not null,

    constraint pk__event_entry_type__id primary key (id)
);

insert into event_entry_type (id, name)
values (1, 'Вход'),
       (2, 'Выход');


create table event
(
    id                  int8 generated by default as identity not null,
    event_type_id       int2                                  not null,
    event_entry_type_id int2,
    user_id             int4                                  not null,
    controller_id       int2                                  not null,
    organization_id     int2                                  not null,
    fired_at            timestamp with time zone              not null,
    created_at          timestamp with time zone              not null,

    constraint pk__event__id primary key (id),
    constraint fk__event__event_type foreign key (event_type_id) references event_type (id),
    constraint fk__event__event_entry_type foreign key (event_entry_type_id) references event_entry_type (id),
    constraint fk__event__users foreign key (user_id) references users (id),
    constraint fk__event__organization foreign key (organization_id) references organization (id),
    constraint fk__event__controller foreign key (controller_id) references controller (id)
);



------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------     INSERTS    ---------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------


insert into employee (first_name, last_name, phone_number, role, created_at, updated_at, created_by, updated_by)
values ('Сергей', 'Лемеш', '375333014285', 'ADMIN', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Иван', 'Иванов', '375293333333', 'USER', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
        ('Мазалов', 'Александр', '375298985609', 'ADMIN', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');

insert into region (name, created_at, updated_at, created_by, updated_by)
values ('Минская', '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');


insert into city (name, region_id, created_at, updated_at, created_by, updated_by)
values ('Слуцк', 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');


insert into organization (name, city_id, created_at, updated_at, created_by, updated_by)
values ('Гимгазия № 1', 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л',
        'Сергей Л'),
       ('СШ № 10', 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');


insert into users (first_name, middle_name, last_name, phone_number, user_type, balance, version, created_at, updated_at, created_by, updated_by)
values ('Иван', 'Иванович', 'Иванов', '375333014285', 'PARENT', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Дарья', null, 'Иванова', null, 'PUPIL', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Максим', null, 'Иванов', null, 'PUPIL', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       ('Петр', 'Петрович', 'Петров', '375297777777', 'PARENT', 1.10, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Валерия', null, 'Петрова', null, 'PUPIL', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       ('Елена', 'Ивановна', 'Волкова', '375221234567', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Наталья', 'Петровна', 'Курбацкая', '375221234568', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Никита', 'Павлович', 'Кузура', '375221234569', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Александр', 'Николаевич', 'Буралкин', '375201234567', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Мария', 'Сергеевна', 'Котович', '375201234567', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Марина', 'Ивановна', 'Руденя', '375201234567', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Елена', 'Викторовна', 'Бондарь', '375201234567', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Нина', 'Ильинична', 'Ефанкова', '375201234567', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Наталья', 'Викторовна', 'Стрикова', '375201234567', 'TEACHER', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       ('Иван', 'Иванович', 'Иванов', '375298985609', 'PARENT', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Иван', 'Иванович', 'Иванов', '375009999999', 'PARENT', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       ('Директор', 'Директорович', 'Грозный', '375221234560', 'ADMINISTRATION', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       ('Иван', 'Иванович', 'Иванов', '375255106670', 'PARENT', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Иван', 'Иванович', 'Иванов', '375445466503', 'PARENT', 0.00, 0, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');


update users set security_code = '$2a$10$dkE5tDzhOc2O2w7LFbWYu.cLXClwSgeMX2sE.r3nUI.SV1cmxXjru', security_code_expiration_date = '2100-01-01 10:00:00.000000 +00:00' where id = 16;
update users set security_code = '$2a$10$Zyc3z4zzYgFkUTeaDeySf.bSRe8GuqgqQO0h.7JEM/XLeq6NH2sh6', security_code_expiration_date = '2100-01-01 10:00:00.000000 +00:00' where id = 6;
update users set security_code = '$2a$10$IRArts470P.StPp1iACjb.GENaJ7kfnAkjLzGCtIxraZ8kgJwrCzK', security_code_expiration_date = '2100-01-01 10:00:00.000000 +00:00' where id = 7;
update users set security_code = '$2a$10$IJRMN7.XhE6D7m3hbm1ZF.fabUa7AzJGw09n3g2ygWS7rddJBzqI6', security_code_expiration_date = '2100-01-01 10:00:00.000000 +00:00' where id = 8;
update users set security_code = '$2a$10$AWaX0U.34MW/G2DNKvOfdehGiAxIApmUCP6.Q2hYkdsdADMCw8Nsi', security_code_expiration_date = '2100-01-01 10:00:00.000000 +00:00' where id = 17;


insert into groups (name, mapping, class_teacher_id, group_type, organization_id, city_id, created_at, updated_at, created_by, updated_by)
values ('2023-А', '2А', 6, 'CLASS', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('2019-В', '6В', 7, 'CLASS', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('2022-Б', '3Б', 8, 'CLASS', 2, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('Родители', null, null, 'PARENTS', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('Родители', null, null, 'PARENTS', 2, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('Сотрудники', null, null, 'TEACHERS', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('Сотрудники', null, null, 'TEACHERS', 2, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('Администрация', null, null, 'ADMINISTRATION', 1, 1, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л');


insert into groups_users (user_id, group_id)
values (2, 1),
       (3, 2),
       (5, 3),
       (1, 4),
       (4, 5),
       (6, 6),
       (7, 6),
       (8, 6),
       (9, 6),
       (10, 6),
       (11, 7),
       (12, 7),
       (13, 7),
       (14, 7),
       (15, 4),
       (16, 4),
       (17, 8),
       (18, 4),
       (19, 4);


insert into service (name, price, disposable, sms_notify, push_notify, created_at, updated_at, created_by, updated_by)
values ('Пропуск', 790, true, false, false, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        'Сергей Л', 'Сергей Л'),
       ('Без уведомлений', 0, false, false, false, '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('СМС информирование', 590, false, true, false, '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('Информирование', 390, false, false, true, '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');


insert into service_to_user (user_id, owner_id, service_id, active_from, created_at, updated_at, created_by, updated_by)
values (2, 1, 2, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       (3, 1, 3, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       (5, 4, 4, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       (2, 15, 2, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       (3, 15, 3, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       (2, 16, 2, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       (3, 16, 3, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       (2, 18, 2, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       (3, 18, 3, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),

       (2, 19, 2, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       (3, 19, 3, '2025-01-01 06:00:00.000000 +00:00', '2025-04-05 10:00:00.097000 +00:00',
        '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');


insert into controller (controller_type, organization_id, attributes, active, created_at, updated_at, created_by, updated_by)
values ('TECH_3V', 1, '{"url":"178.142.240.12","port": 9761,"note": null,"passCodeSize":8,"tech3VDevices":[{"address":1,"leftEntry":true},{"address":2,"leftEntry":false}]}',
        true, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л'),
       ('TECH_3V', 2, '{"url":"178.142.242.36","port": 9761,"note": null,"passCodeSize":8,"tech3VDevices":[{"address":1,"leftEntry":false},{"address":2,"leftEntry":true}]}',
        true, '2025-04-05 10:00:00.097000 +00:00', '2025-04-05 10:00:00.097000 +00:00', 'Сергей Л', 'Сергей Л');


insert into event (event_type_id, event_entry_type_id, fired_at, user_id, organization_id, controller_id, created_at)
values (1, 1, '2025-04-01 07:51:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-01 07:59:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-01 08:01:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-01 08:46:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-01 08:52:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-01 14:44:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-02 07:54:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-02 14:49:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-03 07:44:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-03 15:05:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-03 09:24:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-04 07:45:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-04 08:05:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 2, '2025-04-07 12:44:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-07 12:59:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-08 07:43:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-08 07:55:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-08 12:33:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-09 07:49:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-09 14:33:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-10 07:48:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-10 15:02:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-10 09:01:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-11 07:40:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-11 08:02:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 2, '2025-04-14 12:47:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-14 12:57:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-15 07:43:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-15 07:58:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-15 12:35:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-16 07:51:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 2, '2025-04-17 11:24:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-18 07:46:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-18 08:00:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 2, '2025-04-21 12:44:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-21 12:59:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-21 07:43:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-21 07:55:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-21 12:33:03 +03:00', 2, 1, 1, '2025-04-05 10:00:00 +00:00'),


       (1, 1, '2025-04-01 12:50:03 +03:00', 3, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-01 17:41:03 +03:00', 3, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-02 12:57:03 +03:00', 3, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-02 17:43:03 +03:00', 3, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-03 12:48:03 +03:00', 3, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-03 18:09:03 +03:00', 3, 1, 1, '2025-04-05 10:00:00 +00:00'),


       (1, 1, '2025-04-01 07:38:03 +03:00', 5, 2, 2, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-01 15:22:03 +03:00', 5, 2, 2, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-02 07:40:03 +03:00', 5, 2, 2, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-02 15:34:03 +03:00', 5, 2, 2, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-03 07:43:03 +03:00', 5, 2, 2, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-03 15:11:03 +03:00', 5, 2, 2, '2025-04-05 10:00:00 +00:00'),

       -- учитель
       (1, 1, '2025-04-22 07:38:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-22 09:22:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-22 09:40:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-22 12:34:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-22 15:11:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-23 07:23:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-23 13:27:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-23 14:49:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-23 18:22:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 2, '2025-04-24 14:07:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-24 17:15:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-25 08:17:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-25 13:15:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),

       (1, 1, '2025-04-26 07:18:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-26 11:11:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-26 13:33:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 2, '2025-04-26 13:55:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00'),
       (1, 1, '2025-04-26 15:44:03 +03:00', 6, 1, 1, '2025-04-05 10:00:00 +00:00');