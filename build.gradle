plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.hidetake.ssh' version '2.11.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

ext {
    jwtVersion = '0.12.6'
    mapstructVersion = '1.6.3'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

    maven {
        url = 'https://releases.aspose.com/java/repo/'
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6"
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.asynchttpclient:async-http-client:3.0.2'
    implementation 'openize:openize-heic:25.4'
    implementation 'net.coobird:thumbnailator:0.4.20'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"
    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.119.Final:osx-aarch_64'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}


remotes {
    prod {
        host = "185.244.50.27"
        user = "dev"
        password = "TObmo5AVE/wr0g=="
    }
}


tasks.register('deploy') {
    dependsOn build
    group = "ssh"
    doLast {
        ssh.run {
            session(remotes.prod) {
                def serviceName = "ds-mobile.service"
                def folderName = "ds-mobile/app/"
                def jarName = "ds-mobile.jar"
                execute("mkdir -p $folderName")
                put(from: file("build/libs/$jarName"), into: ".")
                execute("chmod +x $jarName")
                executeSudo("sudo systemctl stop $serviceName", pty: true)
                execute("rm -rf $folderName/*")
                execute("mv $jarName $folderName")
                executeSudo("sudo systemctl start $serviceName", pty: true)
            }
        }
    }
}
